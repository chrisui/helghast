{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/skyboxes/cloud/pos-x.jpg","webpack:///./src/assets/skyboxes/cloud/neg-x.jpg","webpack:///./src/assets/skyboxes/cloud/pos-y.jpg","webpack:///./src/assets/skyboxes/cloud/neg-y.jpg","webpack:///./src/assets/skyboxes/cloud/pos-z.jpg","webpack:///./src/assets/skyboxes/cloud/neg-z.jpg","webpack:///./src/library/services/PlatformService/PlatformService.Null.ts","webpack:///./src/runtime/Services.ts","webpack:///./src/library/services/InputService/InputService.Null.ts","webpack:///./src/library/services/BenchmarkService/BenchmarkService.Null.ts","webpack:///./src/library/services/LoggerService/LoggerService.Null.ts","webpack:///./src/library/services/GraphicsService/GraphicsService.Null.ts","webpack:///./src/framework/Accessor.ts","webpack:///./src/framework/World.ts","webpack:///./src/framework/Application.ts","webpack:///./src/library/resources/Game.ts","webpack:///./src/library/systems/GameManager.ts","webpack:///./src/library/resources/Gamepads.ts","webpack:///./src/library/resources/Keyboard.ts","webpack:///./src/library/resources/Mouse.ts","webpack:///./src/library/systems/GamepadInputter.ts","webpack:///./src/library/systems/KeyboardInputter.ts","webpack:///./src/library/systems/MouseInputter.ts","webpack:///./src/core/maths/Vec3.ts","webpack:///./src/library/components/Velocity.ts","webpack:///./src/core/maths/Quat.ts","webpack:///./src/library/components/Transform.ts","webpack:///./src/library/components/Player.ts","webpack:///./src/library/systems/Tester.ts","webpack:///./src/core/maths/Vec2.ts","webpack:///./src/core/maths/Vec4.ts","webpack:///./src/core/maths/Mat4.ts","webpack:///./src/core/maths/index.ts","webpack:///./src/library/systems/Renderer/shaders/obj.vert","webpack:///./src/library/systems/Renderer/shaders/obj.frag","webpack:///./src/library/systems/Renderer/shaders/skybox.vert","webpack:///./src/library/systems/Renderer/shaders/skybox.frag","webpack:///./src/library/systems/Renderer.ts","webpack:///./src/library/components/Rect2d.ts","webpack:///./src/library/systems/PhysicsManager.ts","webpack:///./src/index.ts","webpack:///./src/library/services/InputService/InputService.Browser.ts","webpack:///./src/library/services/LoggerService/LoggerService.Browser.ts","webpack:///./src/library/services/PlatformService/PlatformService.Browser.ts","webpack:///./src/library/services/GraphicsService/GraphicsService.Browser.ts","webpack:///./src/library/resources/DebugFrames.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PlatformService","[object Object]","Services","input","handler","id","benchmark","timing","log","msg","platform","graphics","vert","frag","gl","Accessor","resources","entityCollection","this","cache","cachePointer","resource","components","bags","entity","every","component","find","entityComponent","constructor","push","map","World_World","systems","entityId","entities","entityComponents","accessors","World","addComponents","world","addResource","addSystem","system","setup","accessor","process","createEntity","BENCHMARK_UPDATE","Application_Application","animationFrameId","Application","update","app","start","end","tick","requestAnimationFrame","stop","cancelAnimationFrame","Game","frame","timeScale","time","maxDeltaTime","deltaTime","GameManager_GameManager","GamepadButton","GamepadAxis","Key","MouseButton","GameManager","sys","game","timestamp","now","Math","min","max","Gamepads","current","0","1","2","3","last","numDevices","deadzone","isPressed","gamepads","index","buttonIndex","buttons","pressed","wasPressed","isPressedNow","wasPressedLast","getButtonValue","getAxisValue","axisIndex","axes","abs","GamepadInputter_GamepadInputter","GamepadInputter","currentPad","buttonsLen","length","pad","Array","j","padDevices","getGamepads","Keyboard","keyStates","tmpKeyStates","lastKeyStates","keyboardInput","KeyboardInputter_KeyboardInputter","KeyboardInputter","keyboard","onKeyDown","event","handleKeyDown","onKeyUp","handleKeyUp","Mouse","x","y","deltaX","deltaY","wheelDelta","buttonStates","4","lastButtonStates","tmpButtonStates","tmpXDelta","tmpYDelta","tmpX","tmpY","tmpWheelDelta","mouse","button","MouseInputter_MouseInputter","MouseInputter","onMouseUp","handleMouseUp","onMouseDown","handleMouseDown","onMouseMove","xDelta","yDelta","handleMouseMove","onMouseWheel","handleMouseWheel","Vec3","z","out","b","a","factor","sqrt","ax","ay","az","Float32Array","Left","Right","Up","Down","Forward","Backward","Velocity_Velocity","velocity","Quat","w","Transform_Transform","position","orientation","rotation","scale","Player","Tester_Tester","Tester","playerEntities","join","transform","ArrowRight","add","ArrowDown","ArrowLeft","ArrowUp","Home","End","Delete","PageDown","sin","Vec2","vec","Vec4","Mat4_Mat4","xx","xy","xz","xw","yx","yy","yz","yw","zx","zy","zz","zw","wx","wy","wz","ww","translation","fieldOfView","aspect","near","far","f","tan","PI","rangeInv","cameraPosition","target","up","zAxis","copy","subtract","normalize","xAxis","cross","yAxis","angle","cos","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","tmp0","tmp1","tmp2","tmp3","tmp4","tmp5","tmp6","tmp7","tmp8","tmp9","tmp10","tmp11","tmp12","tmp13","tmp14","tmp15","tmp16","tmp17","tmp18","tmp19","tmp20","tmp21","tmp22","tmp23","t0","t1","t2","t3","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","v","degToRad","degrees","obj","shaders_obj","skybox","shaders_skybox","BENCHMARK_RENDER","Renderer_Renderer","dimensions","fillColor","Renderer","renderer","getContext","program","createProgram","skyboxProgram","positionLocation","getAttribLocation","uSkyboxLocation","getUniformLocation","uSkyboxViewDirectionProjectionInverseLocation","vao","createVertexArray","skyboxVao","bindVertexArray","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","texture","createTexture","bindTexture","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","url","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","forEach","faceInfo","internalFormat","RGBA","format","type","UNSIGNED_BYTE","texImage2D","image","Image","src","addEventListener","generateMipmap","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","setupSkybox","objProgram","positionAttributeLocation","normalAttributeLocation","uWorldViewProjectionLocation","uWorldInverseTransposeLocation","uColorLocation","uReverseLightDirectionLocation","objVao","matrix","xRotation","translate","ii","vector","transformVector","getFGeometry","normalBuffer","normals","setupObj","canvas","width","clientWidth","height","clientHeight","resizeCanvasToDisplaySize","viewport","fieldOfViewRadians","projectionMatrix","perspective","camera","viewMatrix","lookAt","inverse","viewMatrixForSkybox","viewProjectionMatrix","multiply","skyboxViewDirectionProjectionInverseMatrix","disable","DEPTH_TEST","CULL_FACE","useProgram","uniformMatrix4fv","toTypedArray","uniform1i","drawArrays","TRIANGLES","enable","worldMatrix","yRotation","worldViewProjectionMatrix","worldInverseTransposeMatrix","transpose","uniform4fv","uniform3fv","PhysicsManager_PhysicsManager","tmpVelocity","PhysicsManager","flagIsContextMenuEnabled","listeners","lastListenerId","document","pointerLockElement","body","requestPointerLock","exitPointerLock","window","preventDefaultHandler","removeEventListener","createEventBinding","mapKeyEventHandler","mapMouseEventHandler","listener","navigator","preventDefault","WheelEvent","clientX","clientY","movementX","movementY","code","console","warn","error","trace","frameRequestCallback","performance","prog","vertShader","createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","Error","undefined","shaderType","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","src_gl","querySelector","bindContext","src_app","frameTimings","flushedNum"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __webpack_public_path__ + \"02b6ead32281108e999fe09ff5ab1826.jpg\";","module.exports = __webpack_public_path__ + \"19a745a1d77f59206ee9147d6308dce6.jpg\";","module.exports = __webpack_public_path__ + \"18266d4952996f8d2ffdbdb901c7361d.jpg\";","module.exports = __webpack_public_path__ + \"622a6e5c93b71fba71ae44c12105e5e8.jpg\";","module.exports = __webpack_public_path__ + \"6fbc7c7597ca0e94ae1f7e6541b31198.jpg\";","module.exports = __webpack_public_path__ + \"5d688fbd5490699b8ab791664d54c368.jpg\";","import {IPlatformService} from './IPlatformService';\r\n\r\nexport class PlatformService implements IPlatformService {\r\n  public cancelAnimationFrame() {\r\n    return;\r\n  }\r\n\r\n  public requestAnimationFrame() {\r\n    return 0;\r\n  }\r\n\r\n  public now() {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default PlatformService;\r\n","import * as InputService from '../library/services/InputService';\r\nimport * as BenchmarkService from '../library/services/BenchmarkService';\r\nimport * as LoggerService from '../library/services/LoggerService';\r\nimport * as PlatformService from '../library/services/PlatformService';\r\nimport * as GraphicsService from '../library/services/GraphicsService';\r\n\r\nexport class Services {\r\n  public static input: InputService.Interface = new InputService.Null();\r\n  public static benchmark: BenchmarkService.Interface = new BenchmarkService.Null();\r\n  public static log: LoggerService.Interface = new LoggerService.Null();\r\n  public static platform: PlatformService.Interface = new PlatformService.Null();\r\n  public static graphics: GraphicsService.Interface = new GraphicsService.Null();\r\n}\r\n","import {\r\n  IInputService,\r\n  IKeyEventHandler,\r\n  IEventBindingID,\r\n  IMouseEventHandler\r\n} from './IInputService';\r\n\r\nexport class InputService implements IInputService {\r\n  public isPointerLocked() {\r\n    return false;\r\n  }\r\n  public lockPointer() {\r\n    return undefined;\r\n  }\r\n  public unlockPointer() {\r\n    return undefined;\r\n  }\r\n  public isContextMenuEnabled() {\r\n    return false;\r\n  }\r\n  public enableContextMenu() {\r\n    return undefined;\r\n  }\r\n  public disableContextMenu() {\r\n    return undefined;\r\n  }\r\n  public onKeyDown(handler: IKeyEventHandler) {\r\n    return -1;\r\n  }\r\n  public onKeyUp(handler: IKeyEventHandler) {\r\n    return -1;\r\n  }\r\n  public onMouseMove(handler: IMouseEventHandler) {\r\n    return -1;\r\n  }\r\n  public onMouseWheel(handler: IMouseEventHandler) {\r\n    return -1;\r\n  }\r\n  public onMouseDown(handler: IMouseEventHandler) {\r\n    return -1;\r\n  }\r\n  public onMouseUp(handler: IMouseEventHandler) {\r\n    return -1;\r\n  }\r\n  public removeEventBinding(id: IEventBindingID) {\r\n    return true;\r\n  }\r\n  public getGamepads() {\r\n    return [];\r\n  }\r\n}\r\n","import IBenchmarkService from './IBenchmarkService';\r\n\r\nexport class BenchmarkService implements IBenchmarkService {\r\n  public start(key: string) {\r\n    return undefined;\r\n  }\r\n  public end(key: string) {\r\n    return undefined;\r\n  }\r\n  public push(key: string, timing: number) {\r\n    return undefined;\r\n  }\r\n  public flush() {\r\n    return [];\r\n  }\r\n}\r\n","import ILoggerService from './ILoggerService';\r\n\r\nexport class LoggerService implements ILoggerService {\r\n  public info(msg: string) {\r\n    return undefined;\r\n  }\r\n  public warn(msg: string) {\r\n    return undefined;\r\n  }\r\n  public error(msg: string) {\r\n    return undefined;\r\n  }\r\n  public trace() {\r\n    return undefined;\r\n  }\r\n}\r\n","import {IGraphicsService} from './IGraphicsService';\r\n\r\nexport class GraphicsService implements IGraphicsService {\r\n  public createProgram(vert: string, frag: string) {\r\n    return null;\r\n  }\r\n  public getContext() {\r\n    return null;\r\n  }\r\n  public bindContext(gl: WebGL2RenderingContext) {\r\n    return null;\r\n  }\r\n}\r\n","import {Resource} from './Resource';\r\nimport {Component} from './Component';\r\n\r\nexport class Accessor {\r\n  private resources: {[key: string]: Resource};\r\n  private entityCollection: {[key: string]: Component[]};\r\n  private cache: Component[][] = [];\r\n  private cachePointer: number = 0;\r\n\r\n  constructor(\r\n    resources: {[key: string]: Resource},\r\n    entityCollection: {[key: string]: Component[]},\r\n  ) {\r\n    this.resources = resources;\r\n    this.entityCollection = entityCollection;\r\n  }\r\n\r\n  public process() {\r\n    this.cachePointer = 0;\r\n  }\r\n\r\n  public get<T extends Resource>(resource: typeof Resource) {\r\n    return this.resources[resource.name] as T;\r\n  }\r\n\r\n  public join<T extends Component[]>(...components: typeof Component[]): T[] {\r\n    if (this.cache[this.cachePointer]) {\r\n      const cache = this.cache[this.cachePointer] as T[];\r\n      this.cachePointer++;\r\n      return cache;\r\n    }\r\n\r\n    const bags = [];\r\n    for (const entity in this.entityCollection) {\r\n      if (this.entityCollection.hasOwnProperty(entity)) {\r\n        if (\r\n          !components.every(\r\n            component =>\r\n              !!this.entityCollection[entity].find(\r\n                entityComponent =>\r\n                  entityComponent.constructor.name === component.name,\r\n              ),\r\n          )\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        bags.push(\r\n          components.map(component =>\r\n            this.entityCollection[entity].find(\r\n              entityComponent =>\r\n                entityComponent.constructor.name === component.name,\r\n            ),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n    this.cache[this.cachePointer] = bags;\r\n    this.cachePointer++;\r\n    return bags as T[];\r\n  }\r\n}\r\n","import {ISystem} from './System';\r\nimport {Component} from './Component';\r\nimport {Accessor} from './Accessor';\r\nimport {Entity} from './Entity';\r\n\r\nexport class World {\r\n  public resources: {[resourceName: string]: object} = {};\r\n  public systems: ISystem[] = [];\r\n  public entityId: number = 0;\r\n  public entities: Entity[] = [];\r\n  public entityComponents: {[entity: string]: Component[]} = {};\r\n  public accessors: {[system: string]: Accessor} = {};\r\n}\r\n\r\nexport namespace World {\r\n  export function addResource(world: World, resource: any) {\r\n    world.resources[resource.name] = new resource();\r\n  }\r\n\r\n  export function addSystem(world: World, system: any) {\r\n    world.systems.push(new system());\r\n  }\r\n\r\n  export function setup(world: World) {\r\n    for (const system of world.systems) {\r\n      const accessor = new Accessor(world.resources, world.entityComponents);\r\n      world.accessors[system.constructor.name] = accessor;\r\n\r\n      if (!system.constructor.setup) {\r\n        continue;\r\n      }\r\n\r\n      system.constructor.setup(system, accessor);\r\n    }\r\n  }\r\n\r\n  export function process(world: World) {\r\n    for (const system of world.systems) {\r\n      const accessor = world.accessors[system.constructor.name];\r\n      accessor.process();\r\n\r\n      if (!system.constructor.process) {\r\n        continue;\r\n      }\r\n\r\n      system.constructor.process(system, accessor);\r\n    }\r\n  }\r\n\r\n  export function createEntity(world: World, components: Component[]) {\r\n    const entity = world.entityId++ as Entity;\r\n    world.entities.push(entity);\r\n    addComponents(world, entity, components);\r\n\r\n    return entity;\r\n  }\r\n\r\n  export function addComponents(\r\n    world: World,\r\n    entity: Entity,\r\n    components: Component[],\r\n  ) {\r\n    world.entityComponents[entity] = components;\r\n  }\r\n}\r\n","import {Services} from '../runtime/Services';\r\nimport {World} from './World';\r\n\r\ntype Entity = string & {__entity__: void};\r\n\r\nconst BENCHMARK_UPDATE = 'update';\r\n\r\n/** The main application data class */\r\nexport class Application {\r\n  /** Track the animation loop by id (allows canceling) */\r\n  public animationFrameId: number = 0;\r\n  /** The application world (container of ecs) */\r\n  public world: World = new World();\r\n}\r\n\r\nexport namespace Application {\r\n  /** Process a single tick (which will also queue a new tick on next animation frame) */\r\n  export function tick(app: Application) {\r\n    // queue a new tick on next animation frame IMMEDIATELY\r\n    app.animationFrameId = Services.platform.requestAnimationFrame(() =>\r\n      tick(app),\r\n    );\r\n\r\n    // allow all systems to update\r\n    update(app);\r\n  }\r\n\r\n  /** Stop loop */\r\n  export function stop(app: Application) {\r\n    Services.platform.cancelAnimationFrame(app.animationFrameId);\r\n  }\r\n\r\n  /** Update all registered systems */\r\n  export function update(app: Application) {\r\n    Services.benchmark.start(BENCHMARK_UPDATE);\r\n    World.process(app.world);\r\n    Services.benchmark.end(BENCHMARK_UPDATE);\r\n  }\r\n}\r\n","/** Core game state resource */\r\nexport class Game {\r\n  /** The current frame (0-indexed) */\r\n  public frame: number = 0;\r\n  /** Time multiplyer (ie. 0.5 = half speed updates) */\r\n  public timeScale: number = 1;\r\n  /** Time running in seconds */\r\n  public time: number = 0;\r\n  /** A maximum time for between updates, ignoring lag (before timeScale), in seconds */\r\n  public maxDeltaTime: number = 0.1;\r\n  /** Delta time since last frame in seconds */\r\n  public deltaTime: number = 0;\r\n}\r\n","import {Services} from '../../runtime/Services';\r\nimport {Game} from '../resources/Game';\r\nimport {Accessor} from '../../framework/Accessor';\r\n\r\nexport class GameManager {\r\n  public static resources = [Game];\r\n}\r\n\r\nexport namespace GameManager {\r\n  export function process(sys: GameManager, accessor: Accessor) {\r\n    const game: Game = accessor.get(Game);\r\n\r\n    const timestamp = Services.platform.now() / 1000;\r\n\r\n    // mark this frame\r\n    game.frame += 1;\r\n\r\n    let deltaTime = timestamp - (game.time || timestamp);\r\n\r\n    // clamp our deltaTime for usage this frame\r\n    deltaTime = Math.min(Math.max(deltaTime, 0), game.maxDeltaTime);\r\n    deltaTime *= game.timeScale;\r\n    game.time = timestamp;\r\n    game.deltaTime = deltaTime;\r\n  }\r\n}\r\n","import {IGamepad} from '../services/InputService/IInputService';\r\n\r\n/** Available buttons on a gamepad */\r\nexport const enum GamepadButton {\r\n  // Face buttons\r\n  Face1,\r\n  Face2,\r\n  Face3,\r\n  Face4,\r\n  // Shoulder buttons\r\n  LShoulder1,\r\n  RShoulder1,\r\n  LShoulder2,\r\n  RShoulder2,\r\n  // Other buttons\r\n  Select,\r\n  Start,\r\n  LStick,\r\n  RStick,\r\n  // D Pad\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right,\r\n  // Vendor specific button\r\n  Vendor,\r\n}\r\n\r\n/** Available axes on a gamepad */\r\nexport const enum GamepadAxis {\r\n  LStickX,\r\n  LStickY,\r\n  RStickX,\r\n  RStickY,\r\n}\r\n\r\ninterface IGamepads {\r\n  [key: number]: IGamepad | null;\r\n}\r\n\r\n/** Current gamepad state */\r\nexport class Gamepads {\r\n  public current: IGamepads = {\r\n    0: null,\r\n    1: null,\r\n    2: null,\r\n    3: null,\r\n  };\r\n  public last: IGamepads = {\r\n    0: null,\r\n    1: null,\r\n    2: null,\r\n    3: null,\r\n  };\r\n  public numDevices = 0;\r\n  public deadzone = 0.25;\r\n}\r\n\r\nexport namespace Gamepads {\r\n  /** Is a given button pressed? */\r\n  export function isPressed(\r\n    gamepads: Gamepads,\r\n    index: number,\r\n    buttonIndex: GamepadButton,\r\n  ): boolean {\r\n    if (!gamepads.current[index]) {\r\n      return false;\r\n    }\r\n\r\n    // @ts-ignore need to fix nullable issue\r\n    return gamepads.current[index].buttons[buttonIndex].pressed;\r\n  }\r\n\r\n  /** Was a given button pressed in this update? */\r\n  export function wasPressed(\r\n    gamepads: Gamepads,\r\n    index: number,\r\n    buttonIndex: GamepadButton,\r\n  ): boolean {\r\n    if (!gamepads.current[index]) {\r\n      return false;\r\n    }\r\n\r\n    const isPressedNow =\r\n      // @ts-ignore need to fix nullable issue\r\n      gamepads.current[index].buttons[buttonIndex].pressed;\r\n\r\n    const wasPressedLast =\r\n      gamepads.last[index] &&\r\n      // @ts-ignore need to fix nullable issue\r\n      gamepads.last[index].buttons[buttonIndex].pressed;\r\n\r\n    return isPressedNow && !wasPressedLast;\r\n  }\r\n\r\n  /** What is the value of a given button press? Useful for triggers. */\r\n  export function getButtonValue(\r\n    gamepads: Gamepads,\r\n    index: number,\r\n    buttonIndex: GamepadButton,\r\n  ): number {\r\n    if (!gamepads.current[index]) {\r\n      return 0;\r\n    }\r\n\r\n    // @ts-ignore need to fix nullable issue\r\n    return gamepads.current[index].buttons[buttonIndex].value;\r\n  }\r\n\r\n  /** What is the value for a given axis? */\r\n  export function getAxisValue(\r\n    gamepads: Gamepads,\r\n    index: number,\r\n    axisIndex: GamepadAxis,\r\n  ): number {\r\n    if (!gamepads.current[index]) {\r\n      return 0;\r\n    }\r\n\r\n    // @ts-ignore need to fix nullable issue\r\n    const value = gamepads.current[index].axes[axisIndex];\r\n    if (Math.abs(value) < gamepads.deadzone) {\r\n      return 0;\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","// todo: use KeyboardEvent.code instead of .key\r\n//       https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\r\nexport enum Key {\r\n  Backspace = 'Backspace',\r\n  Tab = 'Tab',\r\n  Enter = 'Enter',\r\n  Shift = 'Shift',\r\n  Control = 'Control',\r\n  Alt = 'Alt',\r\n  CapsLock = 'CapsLock',\r\n  Escape = 'Escape',\r\n  Space = ' ',\r\n  PageUp = 'PageUp',\r\n  PageDown = 'PageDown',\r\n  End = 'End',\r\n  Home = 'Home',\r\n  ArrowLeft = 'ArrowLeft',\r\n  ArrowUp = 'ArrowUp',\r\n  ArrowRight = 'ArrowRight',\r\n  ArrowDown = 'ArrowDown',\r\n  Left = 'Left',\r\n  Up = 'Up',\r\n  Right = 'Right',\r\n  Down = 'Down',\r\n  Insert = 'Insert',\r\n  Delete = 'Delete',\r\n  Zero = '0',\r\n  ClosedParen = ')',\r\n  One = '1',\r\n  ExclamationMark = '!',\r\n  Two = '2',\r\n  AtSign = '@',\r\n  Three = '3',\r\n  PoundSign = '#',\r\n  Hash = '#',\r\n  Four = '4',\r\n  DollarSign = '$',\r\n  Five = '5',\r\n  PercentSign = '%',\r\n  Six = '6',\r\n  Caret = '^',\r\n  Hat = '^',\r\n  Seven = '7',\r\n  Ampersand = '&',\r\n  Eight = '8',\r\n  Star = '*',\r\n  Asterik = '*',\r\n  Nine = '9',\r\n  OpenParen = '(',\r\n  a = 'a',\r\n  b = 'b',\r\n  c = 'c',\r\n  d = 'd',\r\n  e = 'e',\r\n  f = 'f',\r\n  g = 'g',\r\n  h = 'h',\r\n  i = 'i',\r\n  j = 'j',\r\n  k = 'k',\r\n  l = 'l',\r\n  m = 'm',\r\n  n = 'n',\r\n  o = 'o',\r\n  p = 'p',\r\n  q = 'q',\r\n  r = 'r',\r\n  s = 's',\r\n  t = 't',\r\n  u = 'u',\r\n  v = 'v',\r\n  w = 'w',\r\n  x = 'x',\r\n  y = 'y',\r\n  z = 'z',\r\n  A = 'A',\r\n  B = 'B',\r\n  C = 'C',\r\n  D = 'D',\r\n  E = 'E',\r\n  F = 'F',\r\n  G = 'G',\r\n  H = 'H',\r\n  I = 'I',\r\n  J = 'J',\r\n  K = 'K',\r\n  L = 'L',\r\n  M = 'M',\r\n  N = 'N',\r\n  O = 'O',\r\n  P = 'P',\r\n  Q = 'Q',\r\n  R = 'R',\r\n  S = 'S',\r\n  T = 'T',\r\n  U = 'U',\r\n  V = 'V',\r\n  W = 'W',\r\n  X = 'X',\r\n  Y = 'Y',\r\n  Z = 'Z',\r\n  Meta = 'Meta',\r\n  LeftWindowKey = 'Meta',\r\n  RightWindowKey = 'Meta',\r\n  Numpad0 = '0',\r\n  Numpad1 = '1',\r\n  Numpad2 = '2',\r\n  Numpad3 = '3',\r\n  Numpad4 = '4',\r\n  Numpad5 = '5',\r\n  Numpad6 = '6',\r\n  Numpad7 = '7',\r\n  Numpad8 = '8',\r\n  Numpad9 = '9',\r\n  Multiply = '*',\r\n  Add = '+',\r\n  Subtract = '-',\r\n  DecimalPoint = '.',\r\n  Divide = '/',\r\n  F1 = 'F1',\r\n  F2 = 'F2',\r\n  F3 = 'F3',\r\n  F4 = 'F4',\r\n  F5 = 'F5',\r\n  F6 = 'F6',\r\n  F7 = 'F7',\r\n  F8 = 'F8',\r\n  F9 = 'F9',\r\n  F10 = 'F10',\r\n  F11 = 'F11',\r\n  F12 = 'F12',\r\n  NumLock = 'NumLock',\r\n  ScrollLock = 'ScrollLock',\r\n  SemiColon = ';',\r\n  Equals = '=',\r\n  Comma = ',',\r\n  Dash = '-',\r\n  Period = '.',\r\n  UnderScore = '_',\r\n  PlusSign = '+',\r\n  ForwardSlash = '/',\r\n  Tilde = '~',\r\n  GraveAccent = '`',\r\n  OpenBracket = '[',\r\n  ClosedBracket = ']',\r\n  Quote = \"'\",\r\n}\r\n\r\ninterface IKeyStates {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class Keyboard {\r\n  public keyStates: IKeyStates = {};\r\n  public tmpKeyStates: IKeyStates = {};\r\n  public lastKeyStates: IKeyStates = {};\r\n}\r\n\r\nexport namespace Keyboard {\r\n  export function isPressed(keyboardInput: Keyboard, key: Key) {\r\n    return keyboardInput.keyStates[key];\r\n  }\r\n\r\n  /** Was a given button pressed in this update? */\r\n  export function wasPressed(keyboardInput: Keyboard, key: Key): boolean {\r\n    const isPressedNow = keyboardInput.keyStates[key];\r\n    const wasPressedLast = keyboardInput.lastKeyStates[key];\r\n\r\n    return isPressedNow && !wasPressedLast;\r\n  }\r\n}\r\n","export const enum MouseButton {\r\n  Left,\r\n  Middle,\r\n  Right,\r\n  Back, // osx unsupported\r\n  Forward, // osx unsupported\r\n}\r\n\r\nexport interface IButtonStates {\r\n  [key: number]: boolean;\r\n}\r\n\r\nexport class Mouse {\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public deltaX: number = 0;\r\n  public deltaY: number = 0;\r\n  public wheelDelta: number = 0;\r\n  public buttonStates: IButtonStates = {\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n  };\r\n  public lastButtonStates: IButtonStates = {\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n  };\r\n  public tmpButtonStates: IButtonStates = {\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n  };\r\n  public tmpXDelta: number = 0;\r\n  public tmpYDelta: number = 0;\r\n  public tmpX: number = 0;\r\n  public tmpY: number = 0;\r\n  public tmpWheelDelta: number = 0;\r\n}\r\n\r\nexport namespace Mouse {\r\n  /** Is given button currently pressed? */\r\n  export function isPressed(mouse: Mouse, button: MouseButton) {\r\n    return mouse.buttonStates[button];\r\n  }\r\n\r\n  /** Was a given button pressed in this update? */\r\n  export function wasPressed(mouse: Mouse, button: MouseButton): boolean {\r\n    const isPressedNow = mouse.buttonStates[button];\r\n    const wasPressedLast = mouse.lastButtonStates[button];\r\n\r\n    return isPressedNow && !wasPressedLast;\r\n  }\r\n}\r\n","import {Services} from '../../runtime/Services';\r\nimport {IGamepad} from '../services/InputService/IInputService';\r\nimport {Gamepads, GamepadAxis, GamepadButton} from '../resources/Gamepads';\r\nimport {Accessor} from '../../framework/Accessor';\r\n\r\nexport class GamepadInputter {\r\n  public static resources = [Gamepads];\r\n}\r\n\r\nexport namespace GamepadInputter {\r\n  export function process(sys: GamepadInputter, accessor: Accessor) {\r\n    const gamepads: Gamepads = accessor.get(Gamepads);\r\n\r\n    let i;\r\n\r\n    // move current buttons status into previous array\r\n    // reusing objects where possible\r\n    for (i = 0; i < gamepads.numDevices; i++) {\r\n      if (gamepads.current[i] == null) {\r\n        gamepads.last[i] = null;\r\n        continue;\r\n      }\r\n\r\n      const currentPad = gamepads.current[i] as IGamepad;\r\n      const buttons = currentPad.buttons;\r\n      const buttonsLen = buttons.length;\r\n      const pad: IGamepad = gamepads.last[i] || {\r\n        buttons: new Array(buttonsLen),\r\n        axes: [], // axes not important in history checking\r\n      };\r\n\r\n      let j;\r\n      for (j = 0; j < buttonsLen; j++) {\r\n        pad.buttons[j] = pad.buttons[j] || {};\r\n        pad.buttons[j].value = currentPad.buttons[j].value;\r\n        pad.buttons[j].pressed = currentPad.buttons[j].pressed;\r\n      }\r\n      gamepads.last[i] = pad;\r\n    }\r\n\r\n    // update with new gamepad values\r\n    const padDevices = Services.input.getGamepads();\r\n    const numDevices = padDevices.length;\r\n    for (i = 0; i < numDevices; i++) {\r\n      gamepads.current[i] = padDevices[i];\r\n    }\r\n    gamepads.numDevices = numDevices;\r\n  }\r\n}\r\n","import {Services} from '../../runtime/Services';\r\nimport {IKeyEvent} from '../services/InputService/IInputService';\r\nimport {Accessor} from '../../framework/Accessor';\r\nimport {Keyboard} from '../resources/Keyboard';\r\n\r\nexport class KeyboardInputter {\r\n  public static resources = [Keyboard];\r\n}\r\n\r\nexport namespace KeyboardInputter {\r\n  export function setup(sys: KeyboardInputter, accessor: Accessor) {\r\n    const keyboard: Keyboard = accessor.get(Keyboard);\r\n    Services.input.onKeyDown(event => handleKeyDown(keyboard, event));\r\n    Services.input.onKeyUp(event => handleKeyUp(keyboard, event));\r\n  }\r\n\r\n  export function process(sys: KeyboardInputter, accessor: Accessor) {\r\n    const keyboard: Keyboard = accessor.get(Keyboard);\r\n    for (const i in keyboard.tmpKeyStates) {\r\n      if (keyboard.tmpKeyStates.hasOwnProperty(i)) {\r\n        keyboard.lastKeyStates[i] = keyboard.keyStates[i];\r\n        keyboard.keyStates[i] = keyboard.tmpKeyStates[i];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleKeyDown(keyboardInput: Keyboard, event: IKeyEvent) {\r\n  keyboardInput.tmpKeyStates[event.key] = true;\r\n}\r\n\r\nfunction handleKeyUp(keyboardInput: Keyboard, event: IKeyEvent) {\r\n  keyboardInput.tmpKeyStates[event.key] = false;\r\n}\r\n","import {Services} from '../../runtime/Services';\r\nimport {IMouseEvent} from '../services/InputService/IInputService';\r\nimport {Mouse} from '../resources/Mouse';\r\nimport {Accessor} from '../../framework/Accessor';\r\n\r\nexport class MouseInputter {\r\n  public static resources = [Mouse];\r\n}\r\n\r\nexport namespace MouseInputter {\r\n  export function setup(sys: MouseInputter, accessor: Accessor) {\r\n    const mouse: Mouse = accessor.get(Mouse);\r\n    Services.input.onMouseUp(event => handleMouseUp(mouse, event));\r\n    Services.input.onMouseDown(event => handleMouseDown(mouse, event));\r\n    Services.input.onMouseMove(event => handleMouseMove(mouse, event));\r\n    Services.input.onMouseWheel(event => handleMouseWheel(mouse, event));\r\n  }\r\n\r\n  export function process(sys: MouseInputter, accessor: Accessor) {\r\n    const mouse: Mouse = accessor.get(Mouse);\r\n    for (const i in mouse.tmpButtonStates) {\r\n      if (mouse.lastButtonStates.hasOwnProperty(i)) {\r\n        mouse.lastButtonStates[i] = mouse.buttonStates[i];\r\n        mouse.buttonStates[i] = mouse.tmpButtonStates[i];\r\n      }\r\n    }\r\n    mouse.deltaX = mouse.tmpXDelta;\r\n    mouse.deltaY = mouse.tmpYDelta;\r\n    mouse.x = mouse.tmpX;\r\n    mouse.y = mouse.tmpY;\r\n    mouse.wheelDelta = mouse.tmpWheelDelta;\r\n\r\n    // reset incremental temp values\r\n    mouse.tmpWheelDelta = 0;\r\n    mouse.tmpXDelta = 0;\r\n    mouse.tmpYDelta = 0;\r\n  }\r\n}\r\n\r\nfunction handleMouseUp(mouse: Mouse, event: IMouseEvent) {\r\n  mouse.tmpButtonStates[event.button] = false;\r\n}\r\n\r\nfunction handleMouseDown(mouse: Mouse, event: IMouseEvent) {\r\n  mouse.tmpButtonStates[event.button] = true;\r\n}\r\n\r\nfunction handleMouseMove(mouse: Mouse, event: IMouseEvent) {\r\n  mouse.tmpX = event.x;\r\n  mouse.tmpY = event.y;\r\n  mouse.tmpXDelta += event.xDelta;\r\n  mouse.tmpYDelta += event.yDelta;\r\n}\r\n\r\nfunction handleMouseWheel(mouse: Mouse, event: IMouseEvent) {\r\n  mouse.tmpWheelDelta += event.wheelDelta;\r\n}\r\n","/**\r\n * [ x, y, z ]\r\n */\r\nexport class Vec3 {\r\n  public static Left: Immutable<Vec3> = Vec3.create(-1, 0, 0);\r\n  public static Right: Immutable<Vec3> = Vec3.create(1, 0, 0);\r\n  public static Up: Immutable<Vec3> = Vec3.create(0, 1, 0);\r\n  public static Down: Immutable<Vec3> = Vec3.create(0, -1, 0);\r\n  public static Forward: Immutable<Vec3> = Vec3.create(0, 0, 1);\r\n  public static Backward: Immutable<Vec3> = Vec3.create(0, 0, -1);\r\n\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public z: number = 0;\r\n\r\n  public static create(x: number, y: number, z: number) {\r\n    const out = new Vec3();\r\n    out.x = x;\r\n    out.y = y;\r\n    out.z = z;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * copies values of vector\r\n   *\r\n   * @param out target for output\r\n   */\r\n  public copy(out: Vec3 = new Vec3()) {\r\n    out.x = this.x;\r\n    out.y = this.y;\r\n    out.z = this.z;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Add two vectors\r\n   *\r\n   * @param b the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public add(b: Vec3, out: Vec3 = new Vec3()) {\r\n    const a = this;\r\n    out.x = a.x + b.x;\r\n    out.y = a.y + b.y;\r\n    out.z = a.z + b.z;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Subtract two vectors\r\n   *\r\n   * @param b the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public subtract(b: Vec3, out: Vec3 = new Vec3()) {\r\n    const a = this;\r\n    out.x = a.x - b.x;\r\n    out.y = a.y - b.y;\r\n    out.z = a.z - b.z;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Scale a vector\r\n   *\r\n   * @param scale the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public scale(factor: number, out = new Vec3()) {\r\n    const a = this;\r\n    out.x = a.x * factor;\r\n    out.y = a.y * factor;\r\n    out.z = a.z * factor;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * normalizes a vector.\r\n   *\r\n   * @param out optional vector3 to store result\r\n   * @return out or new vector if not provided\r\n   */\r\n  public normalize(out = new Vec3()) {\r\n    const length = Math.sqrt(\r\n      this.x * this.x + this.y * this.y + this.z * this.z,\r\n    );\r\n    // make sure we don't divide by 0.\r\n    if (length > 0.00001) {\r\n      out.x = this.x / length;\r\n      out.y = this.y / length;\r\n      out.z = this.z / length;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Computes the cross product of 2 vectors3s\r\n   *\r\n   * @param b vector to cross with\r\n   * @param out  optional vector3 to store result\r\n   * @return out or new if not provided\r\n   */\r\n  public cross(b: Vec3, out = new Vec3()) {\r\n    const ax = this.x;\r\n    const ay = this.y;\r\n    const az = this.z;\r\n    out.x = ay * b.z - az * b.y;\r\n    out.y = az * b.x - ax * b.z;\r\n    out.z = ax * b.y - ay * b.x;\r\n    return out;\r\n  }\r\n\r\n  public toTypedArray(out = new Float32Array(3)) {\r\n    out[0] = this.x;\r\n    out[1] = this.y;\r\n    out[2] = this.z;\r\n    return out;\r\n  }\r\n}\r\n","import {Vec3} from '../../core/maths/Vec3';\r\n\r\n/** A component representing a 3d velocity */\r\nexport class Velocity {\r\n  /** The 3d velocity */\r\n  public velocity: Vec3 = new Vec3();\r\n}\r\n","/**\r\n * [ x, y, z, w ]\r\n */\r\nexport class Quat {\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public z: number = 0;\r\n  public w: number = 0;\r\n}\r\n","import {Vec3} from '../../core/maths/Vec3';\r\nimport {Quat} from '../../core/maths/Quat';\r\n\r\n/** A component representing a heirarcheal transform in 3d space */\r\nexport class Transform {\r\n  /** The local 3d position */\r\n  public position: Vec3 = new Vec3();\r\n  /** The local orientation */\r\n  public orientation: Quat = new Quat();\r\n  /** Local orientation as angles */\r\n  public rotation: Vec3 = new Vec3();\r\n  /** The local scale */\r\n  public scale: Vec3 = Vec3.create(1, 1, 1);\r\n}\r\n","export class Player {}\r\n","import {Keyboard, Key} from '../resources/Keyboard';\r\nimport {Accessor} from '../../framework/Accessor';\r\nimport {Velocity} from '../components/Velocity';\r\nimport {Transform} from '../components/Transform';\r\nimport {Vec3} from '../../core/maths/Vec3';\r\nimport {Game} from '../resources/Game';\r\nimport {Player} from '../components/Player';\r\n\r\nexport class Tester {\r\n  public static resources = [Keyboard, Game];\r\n  public static components = [Velocity, Transform, Player];\r\n}\r\n\r\nexport namespace Tester {\r\n  export function process(sys: Tester, accessor: Accessor) {\r\n    const keyboard = accessor.get<Immutable<Keyboard>>(Keyboard);\r\n    const game = accessor.get<Immutable<Game>>(Game);\r\n    const playerEntities = accessor.join<[Velocity, Transform, Player]>(\r\n      Velocity,\r\n      Transform,\r\n      Player,\r\n    );\r\n    for (const [velocity, transform] of playerEntities) {\r\n      velocity.velocity.x = 0;\r\n      velocity.velocity.y = 0;\r\n      velocity.velocity.z = 0;\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.ArrowRight)) {\r\n        velocity.velocity.add(Vec3.Right, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.ArrowDown)) {\r\n        velocity.velocity.add(Vec3.Backward, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.ArrowLeft)) {\r\n        velocity.velocity.add(Vec3.Left, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.ArrowUp)) {\r\n        velocity.velocity.add(Vec3.Forward, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.Home)) {\r\n        velocity.velocity.add(Vec3.Up, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.End)) {\r\n        velocity.velocity.add(Vec3.Down, velocity.velocity);\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.Delete)) {\r\n        transform.rotation.y = (transform.rotation.y - 1 + 360) % 360;\r\n      }\r\n\r\n      if (Keyboard.isPressed(keyboard, Key.PageDown)) {\r\n        transform.rotation.y = (transform.rotation.y + 1) % 360;\r\n      }\r\n    }\r\n\r\n    const entities = accessor.join<[Transform, Player]>(Transform);\r\n    for (const [transform] of entities) {\r\n      transform.position.y += Math.sin(game.time) * 1;\r\n\r\n      transform.rotation.y =\r\n        (transform.rotation.y + 1 * game.deltaTime * 10) % 360;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * [ x, y ]\r\n */\r\nexport class Vec2 {\r\n  public static Up: Immutable<Vec2> = Vec2.create(0, 1);\r\n  public static Right: Immutable<Vec2> = Vec2.create(1, 0);\r\n  public static Down: Immutable<Vec2> = Vec2.create(0, -1);\r\n  public static Left: Immutable<Vec2> = Vec2.create(-1, 0);\r\n\r\n  /** 0 = x */\r\n  public x: number = 0;\r\n  /** 1 = y */\r\n  public y: number = 0;\r\n\r\n  /**\r\n   * Create a new vector\r\n   *\r\n   * @param x x value\r\n   * @param y y value\r\n   */\r\n  public static create(x: number, y: number) {\r\n    const vec = new Vec2();\r\n    vec.x = x;\r\n    vec.y = y;\r\n    return vec;\r\n  }\r\n\r\n  /**\r\n   * Add two vectors\r\n   *\r\n   * @param b the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public add(b: Vec2, out: Vec2 = new Vec2()) {\r\n    const a = this;\r\n    out.x = a.x + b.x;\r\n    out.y = a.y + b.y;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Subtract two vectors\r\n   *\r\n   * @param b the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public subtract(b: Vec2, out: Vec2 = new Vec2()) {\r\n    const a = this;\r\n    out.x = a.x - b.x;\r\n    out.y = a.y - b.y;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Scale a vector\r\n   *\r\n   * @param scale the second operand\r\n   * @param out optional target for output\r\n   */\r\n  public scale(factor: number, out: Vec2 = new Vec2()) {\r\n    const a = this;\r\n    out.x = a.x * factor;\r\n    out.y = a.y * factor;\r\n    return out;\r\n  }\r\n}\r\n","/**\r\n * [ x, y, z, w ]\r\n */\r\nexport class Vec4 {\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public z: number = 0;\r\n  public w: number = 0;\r\n\r\n  public static create(x: number, y: number, z: number, w: number) {\r\n    const out = new Vec4();\r\n    out.x = x;\r\n    out.y = y;\r\n    out.z = z;\r\n    out.w = w;\r\n    return out;\r\n  }\r\n\r\n  public toTypedArray(out = new Float32Array(4)) {\r\n    out[0] = this.x;\r\n    out[1] = this.y;\r\n    out[2] = this.z;\r\n    out[3] = this.w;\r\n    return out;\r\n  }\r\n}\r\n","import {Vec3} from './Vec3';\r\nimport {Vec4} from './Vec4';\r\n\r\n/**\r\n * [ xx, xy, xz, xw,\r\n *   yx, yy, yz, yw,\r\n *   zx, zy, zz, zw,\r\n *   wx, wy, wz, ww ]\r\n */\r\nexport class Mat4 {\r\n  public xx: number = 0;\r\n  public xy: number = 0;\r\n  public xz: number = 0;\r\n  public xw: number = 0;\r\n  public yx: number = 0;\r\n  public yy: number = 0;\r\n  public yz: number = 0;\r\n  public yw: number = 0;\r\n  public zx: number = 0;\r\n  public zy: number = 0;\r\n  public zz: number = 0;\r\n  public zw: number = 0;\r\n  public wx: number = 0;\r\n  public wy: number = 0;\r\n  public wz: number = 0;\r\n  public ww: number = 0;\r\n\r\n  /**\r\n   * Create a new identity matrix\r\n   *\r\n   * @param out optional matrix to write to\r\n   */\r\n  public static identity(out = new Mat4()) {\r\n    out.xx = 1;\r\n    out.xy = 0;\r\n    out.xz = 0;\r\n    out.xw = 0;\r\n    out.yx = 0;\r\n    out.yy = 1;\r\n    out.yz = 0;\r\n    out.yw = 0;\r\n    out.zx = 0;\r\n    out.zy = 0;\r\n    out.zz = 1;\r\n    out.zw = 0;\r\n    out.wx = 0;\r\n    out.wy = 0;\r\n    out.wz = 0;\r\n    out.ww = 1;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Makes a translation matrix\r\n   *\r\n   * @param translation translation as vector.\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public static translation(translation: Vec3, out = new Mat4()) {\r\n    out.xx = 1;\r\n    out.xy = 0;\r\n    out.xz = 0;\r\n    out.xw = 0;\r\n    out.yx = 0;\r\n    out.yy = 1;\r\n    out.yz = 0;\r\n    out.yw = 0;\r\n    out.zx = 0;\r\n    out.zy = 0;\r\n    out.zz = 1;\r\n    out.zw = 0;\r\n    out.wx = translation.x;\r\n    out.wy = translation.y;\r\n    out.wz = translation.z;\r\n    out.ww = 1;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Computes a 4-by-4 perspective transformation matrix given the angular height\r\n   * of the frustum, the aspect ratio, and the near and far clipping planes.  The\r\n   * arguments define a frustum extending in the negative z direction.  The given\r\n   * angle is the vertical angle of the frustum, and the horizontal angle is\r\n   * determined to produce the given aspect ratio.  The arguments near and far are\r\n   * the distances to the near and far clipping planes.  Note that near and far\r\n   * are not z coordinates, but rather they are distances along the negative\r\n   * z-axis.  The matrix generated sends the viewing frustum to the unit box.\r\n   * We assume a unit box extending from -1 to 1 in the x and y dimensions and\r\n   * from -1 to 1 in the z dimension.\r\n   *\r\n   * @param fieldOfView field of view, in y axis, in radians.\r\n   * @param aspect aspect of viewport (width / height)\r\n   * @param near near Z clipping plane\r\n   * @param far far Z clipping plane\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public static perspective(\r\n    fieldOfView: number,\r\n    aspect: number,\r\n    near: number,\r\n    far: number,\r\n    out = new Mat4(),\r\n  ) {\r\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfView);\r\n    const rangeInv = 1.0 / (near - far);\r\n\r\n    out.xx = f / aspect;\r\n    out.xy = 0;\r\n    out.xz = 0;\r\n    out.xw = 0;\r\n    out.yx = 0;\r\n    out.yy = f;\r\n    out.yz = 0;\r\n    out.yw = 0;\r\n    out.zx = 0;\r\n    out.zy = 0;\r\n    out.zz = (near + far) * rangeInv;\r\n    out.zw = -1;\r\n    out.wx = 0;\r\n    out.wy = 0;\r\n    out.wz = near * far * rangeInv * 2;\r\n    out.ww = 0;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Creates a lookAt matrix.\r\n   * This is a world matrix for a camera. In other words it will transform\r\n   * from the origin to a place and orientation in the world. For a view\r\n   * matrix take the inverse of this.\r\n   *\r\n   * @param cameraPosition position of the camera\r\n   * @param target position of the target\r\n   * @param up direction\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public static lookAt(\r\n    cameraPosition: Vec3,\r\n    target: Vec3,\r\n    up: Vec3,\r\n    out = new Mat4(),\r\n  ) {\r\n    const zAxis = cameraPosition\r\n      .copy()\r\n      .subtract(target)\r\n      .normalize();\r\n    const xAxis = up\r\n      .copy()\r\n      .cross(zAxis)\r\n      .normalize();\r\n    const yAxis = zAxis\r\n      .copy()\r\n      .cross(xAxis)\r\n      .normalize();\r\n\r\n    out.xx = xAxis.x;\r\n    out.xy = xAxis.y;\r\n    out.xz = xAxis.z;\r\n    out.xw = 0;\r\n    out.yx = yAxis.x;\r\n    out.yy = yAxis.y;\r\n    out.yz = yAxis.z;\r\n    out.yw = 0;\r\n    out.zx = zAxis.x;\r\n    out.zy = zAxis.y;\r\n    out.zz = zAxis.z;\r\n    out.zw = 0;\r\n    out.wx = cameraPosition.x;\r\n    out.wy = cameraPosition.y;\r\n    out.wz = cameraPosition.z;\r\n    out.ww = 1;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Makes a y rotation matrix\r\n   *\r\n   * @param angle amount to rotate in radians\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public static yRotation(angle: number, out = new Mat4()) {\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    out.xx = c;\r\n    out.xy = 0;\r\n    out.xz = -s;\r\n    out.xw = 0;\r\n    out.yx = 0;\r\n    out.yy = 1;\r\n    out.yz = 0;\r\n    out.yw = 0;\r\n    out.zx = s;\r\n    out.zy = 0;\r\n    out.zz = c;\r\n    out.zw = 0;\r\n    out.wx = 0;\r\n    out.wy = 0;\r\n    out.wz = 0;\r\n    out.ww = 1;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Makes a x rotation matrix\r\n   *\r\n   * @param angle amount to rotate in radians\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public static xRotation(angle: number, out = new Mat4()) {\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    out.xx = 1;\r\n    out.xy = 0;\r\n    out.xz = 0;\r\n    out.xw = 0;\r\n    out.yx = 0;\r\n    out.yy = c;\r\n    out.yz = s;\r\n    out.yw = 0;\r\n    out.zx = 0;\r\n    out.zy = -s;\r\n    out.zz = c;\r\n    out.zw = 0;\r\n    out.wx = 0;\r\n    out.wy = 0;\r\n    out.wz = 0;\r\n    out.ww = 1;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Computes the inverse of a matrix.\r\n   *\r\n   * @param out optional matrix to store result\r\n   * @return out or this matrix\r\n   */\r\n  public inverse(out = new Mat4()) {\r\n    const m00 = this.xx;\r\n    const m01 = this.xy;\r\n    const m02 = this.xz;\r\n    const m03 = this.xw;\r\n    const m10 = this.yx;\r\n    const m11 = this.yy;\r\n    const m12 = this.yz;\r\n    const m13 = this.yw;\r\n    const m20 = this.zx;\r\n    const m21 = this.zy;\r\n    const m22 = this.zz;\r\n    const m23 = this.zw;\r\n    const m30 = this.wx;\r\n    const m31 = this.wy;\r\n    const m32 = this.wz;\r\n    const m33 = this.ww;\r\n    const tmp0 = m22 * m33;\r\n    const tmp1 = m32 * m23;\r\n    const tmp2 = m12 * m33;\r\n    const tmp3 = m32 * m13;\r\n    const tmp4 = m12 * m23;\r\n    const tmp5 = m22 * m13;\r\n    const tmp6 = m02 * m33;\r\n    const tmp7 = m32 * m03;\r\n    const tmp8 = m02 * m23;\r\n    const tmp9 = m22 * m03;\r\n    const tmp10 = m02 * m13;\r\n    const tmp11 = m12 * m03;\r\n    const tmp12 = m20 * m31;\r\n    const tmp13 = m30 * m21;\r\n    const tmp14 = m10 * m31;\r\n    const tmp15 = m30 * m11;\r\n    const tmp16 = m10 * m21;\r\n    const tmp17 = m20 * m11;\r\n    const tmp18 = m00 * m31;\r\n    const tmp19 = m30 * m01;\r\n    const tmp20 = m00 * m21;\r\n    const tmp21 = m20 * m01;\r\n    const tmp22 = m00 * m11;\r\n    const tmp23 = m10 * m01;\r\n\r\n    const t0 =\r\n      tmp0 * m11 +\r\n      tmp3 * m21 +\r\n      tmp4 * m31 -\r\n      (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\r\n    const t1 =\r\n      tmp1 * m01 +\r\n      tmp6 * m21 +\r\n      tmp9 * m31 -\r\n      (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\r\n    const t2 =\r\n      tmp2 * m01 +\r\n      tmp7 * m11 +\r\n      tmp10 * m31 -\r\n      (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\r\n    const t3 =\r\n      tmp5 * m01 +\r\n      tmp8 * m11 +\r\n      tmp11 * m21 -\r\n      (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\r\n\r\n    const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n\r\n    out.xx = d * t0;\r\n    out.xy = d * t1;\r\n    out.xz = d * t2;\r\n    out.xw = d * t3;\r\n    out.yx =\r\n      d *\r\n      (tmp1 * m10 +\r\n        tmp2 * m20 +\r\n        tmp5 * m30 -\r\n        (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\r\n    out.yy =\r\n      d *\r\n      (tmp0 * m00 +\r\n        tmp7 * m20 +\r\n        tmp8 * m30 -\r\n        (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\r\n    out.yz =\r\n      d *\r\n      (tmp3 * m00 +\r\n        tmp6 * m10 +\r\n        tmp11 * m30 -\r\n        (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\r\n    out.yw =\r\n      d *\r\n      (tmp4 * m00 +\r\n        tmp9 * m10 +\r\n        tmp10 * m20 -\r\n        (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\r\n    out.zx =\r\n      d *\r\n      (tmp12 * m13 +\r\n        tmp15 * m23 +\r\n        tmp16 * m33 -\r\n        (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\r\n    out.zy =\r\n      d *\r\n      (tmp13 * m03 +\r\n        tmp18 * m23 +\r\n        tmp21 * m33 -\r\n        (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\r\n    out.zz =\r\n      d *\r\n      (tmp14 * m03 +\r\n        tmp19 * m13 +\r\n        tmp22 * m33 -\r\n        (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\r\n    out.zw =\r\n      d *\r\n      (tmp17 * m03 +\r\n        tmp20 * m13 +\r\n        tmp23 * m23 -\r\n        (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\r\n    out.wx =\r\n      d *\r\n      (tmp14 * m22 +\r\n        tmp17 * m32 +\r\n        tmp13 * m12 -\r\n        (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\r\n    out.wy =\r\n      d *\r\n      (tmp20 * m32 +\r\n        tmp12 * m02 +\r\n        tmp19 * m22 -\r\n        (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\r\n    out.wz =\r\n      d *\r\n      (tmp18 * m12 +\r\n        tmp23 * m32 +\r\n        tmp15 * m02 -\r\n        (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\r\n    out.ww =\r\n      d *\r\n      (tmp22 * m22 +\r\n        tmp16 * m02 +\r\n        tmp21 * m12 -\r\n        (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Copy matrix values into a new matrix\r\n   *\r\n   * @param out optional matrix to store result\r\n   * @return out or new matrix\r\n   */\r\n  public copy(out = new Mat4()) {\r\n    out.xx = this.xx;\r\n    out.xy = this.xy;\r\n    out.xz = this.xz;\r\n    out.xw = this.xw;\r\n    out.yx = this.yx;\r\n    out.yy = this.yy;\r\n    out.yz = this.yz;\r\n    out.yw = this.yw;\r\n    out.zx = this.zx;\r\n    out.zy = this.zy;\r\n    out.zz = this.zz;\r\n    out.zw = this.zw;\r\n    out.wx = this.wx;\r\n    out.wy = this.wy;\r\n    out.wz = this.wz;\r\n    out.ww = this.ww;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Takes two 4-by-4 matrices, a and b, and computes the product in the order\r\n   * that pre-composes b with a.  In other words, the matrix returned will\r\n   * transform by b first and then a.  Note this is subtly different from just\r\n   * multiplying the matrices together.  For given a and b, this function returns\r\n   * the same object in both row-major and column-major mode.\r\n   *\r\n   * @param b A matrix.\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public multiply(b: Mat4, out = new Mat4()) {\r\n    const b00 = b.xx;\r\n    const b01 = b.xy;\r\n    const b02 = b.xz;\r\n    const b03 = b.xw;\r\n    const b10 = b.yx;\r\n    const b11 = b.yy;\r\n    const b12 = b.yz;\r\n    const b13 = b.yw;\r\n    const b20 = b.zx;\r\n    const b21 = b.zy;\r\n    const b22 = b.zz;\r\n    const b23 = b.zw;\r\n    const b30 = b.wx;\r\n    const b31 = b.wy;\r\n    const b32 = b.wz;\r\n    const b33 = b.ww;\r\n    const a00 = this.xx;\r\n    const a01 = this.xy;\r\n    const a02 = this.xz;\r\n    const a03 = this.xw;\r\n    const a10 = this.yx;\r\n    const a11 = this.yy;\r\n    const a12 = this.yz;\r\n    const a13 = this.yw;\r\n    const a20 = this.zx;\r\n    const a21 = this.zy;\r\n    const a22 = this.zz;\r\n    const a23 = this.zw;\r\n    const a30 = this.wx;\r\n    const a31 = this.wy;\r\n    const a32 = this.wz;\r\n    const a33 = this.ww;\r\n    out.xx = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\r\n    out.xy = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\r\n    out.xz = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\r\n    out.xw = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\r\n    out.yx = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\r\n    out.yy = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\r\n    out.yz = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\r\n    out.yw = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\r\n    out.zx = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\r\n    out.zy = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\r\n    out.zz = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\r\n    out.zw = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\r\n    out.wx = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\r\n    out.wy = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\r\n    out.wz = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\r\n    out.ww = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Transposes a matrix.\r\n   * @param m matrix to transpose.\r\n   * @param out optional matrix to store result\r\n   * @return out or a new matrix if none provided\r\n   */\r\n  public transpose(out = new Mat4()) {\r\n    const xx = this.xx;\r\n    const xy = this.xy;\r\n    const xz = this.xz;\r\n    const xw = this.xw;\r\n    const yx = this.yx;\r\n    const yy = this.yy;\r\n    const yz = this.yz;\r\n    const yw = this.yw;\r\n    const zx = this.zx;\r\n    const zy = this.zy;\r\n    const zz = this.zz;\r\n    const zw = this.zw;\r\n    const wx = this.wx;\r\n    const wy = this.wy;\r\n    const wz = this.wz;\r\n    const ww = this.ww;\r\n    out.xx = xx;\r\n    out.xy = yx;\r\n    out.xz = zx;\r\n    out.xw = wx;\r\n    out.yx = xy;\r\n    out.yy = yy;\r\n    out.yz = zy;\r\n    out.yw = wy;\r\n    out.zx = xz;\r\n    out.zy = yz;\r\n    out.zz = zz;\r\n    out.zw = wz;\r\n    out.wx = xw;\r\n    out.wy = yw;\r\n    out.wz = zw;\r\n    out.ww = ww;\r\n\r\n    return out;\r\n  }\r\n\r\n  public toTypedArray(out = new Float32Array(16)) {\r\n    out[0] = this.xx;\r\n    out[1] = this.xy;\r\n    out[2] = this.xz;\r\n    out[3] = this.xw;\r\n    out[4] = this.yx;\r\n    out[5] = this.yy;\r\n    out[6] = this.yz;\r\n    out[7] = this.yw;\r\n    out[8] = this.zx;\r\n    out[9] = this.zy;\r\n    out[10] = this.zz;\r\n    out[11] = this.zw;\r\n    out[12] = this.wx;\r\n    out[13] = this.wy;\r\n    out[14] = this.wz;\r\n    out[15] = this.ww;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Mutliply by translation matrix.\r\n   *\r\n   * @param translation the translation in a vector.\r\n   * @param out optional matrix to store result\r\n   * @return out or a current matrix if none provided\r\n   */\r\n  public translate(translation: Vec3, out = new Mat4()) {\r\n    const m00 = this.xx;\r\n    const m01 = this.xy;\r\n    const m02 = this.xz;\r\n    const m03 = this.xw;\r\n    const m10 = this.yx;\r\n    const m11 = this.yy;\r\n    const m12 = this.yz;\r\n    const m13 = this.yw;\r\n    const m20 = this.zx;\r\n    const m21 = this.zy;\r\n    const m22 = this.zz;\r\n    const m23 = this.zw;\r\n    const m30 = this.wx;\r\n    const m31 = this.wy;\r\n    const m32 = this.wz;\r\n    const m33 = this.ww;\r\n\r\n    if (this !== out) {\r\n      out.xx = m00;\r\n      out.xy = m01;\r\n      out.xz = m02;\r\n      out.xw = m03;\r\n      out.yx = m10;\r\n      out.yy = m11;\r\n      out.yz = m12;\r\n      out.yw = m13;\r\n      out.zx = m20;\r\n      out.zy = m21;\r\n      out.zz = m22;\r\n      out.zw = m23;\r\n    }\r\n\r\n    out.wx =\r\n      m00 * translation.x + m10 * translation.y + m20 * translation.z + m30;\r\n    out.wy =\r\n      m01 * translation.x + m11 * translation.y + m21 * translation.z + m31;\r\n    out.wz =\r\n      m02 * translation.x + m12 * translation.y + m22 * translation.z + m32;\r\n    out.ww =\r\n      m03 * translation.x + m13 * translation.y + m23 * translation.z + m33;\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Takes a  matrix and a vector with 4 entries, transforms that vector by\r\n   * the matrix, and returns the result as a vector with 4 entries.\r\n   *\r\n   * @param v The point in homogenous coordinates.\r\n   * @param out optional vector4 to store result\r\n   * @return out or new Vector4 if not provided\r\n   */\r\n  public transformVector(v: Vec4, out = new Vec4()) {\r\n    out.x = 0;\r\n    out.x += v.x * this.xx;\r\n    out.x += v.y * this.yx;\r\n    out.x += v.z * this.zx;\r\n    out.x += v.w * this.wx;\r\n    out.y = 0;\r\n    out.y += v.x * this.xy;\r\n    out.y += v.y * this.yy;\r\n    out.y += v.z * this.zy;\r\n    out.y += v.w * this.wy;\r\n    out.z = 0;\r\n    out.z += v.x * this.xz;\r\n    out.z += v.y * this.yz;\r\n    out.z += v.z * this.zz;\r\n    out.z += v.w * this.wz;\r\n    out.w = 0;\r\n    out.w += v.x * this.xw;\r\n    out.w += v.y * this.yw;\r\n    out.w += v.z * this.zw;\r\n    out.w += v.w * this.ww;\r\n\r\n    return out;\r\n  }\r\n}\r\n","export {Mat3} from './Mat3';\r\nexport {Mat4} from './Mat4';\r\nexport {Vec2} from './Vec2';\r\nexport {Vec3} from './Vec3';\r\nexport {Vec4} from './Vec4';\r\nexport {Quat} from './Quat';\r\n\r\nexport function radToDeg(radians: number) {\r\n  return (radians * 180) / Math.PI;\r\n}\r\n\r\nexport function degToRad(degrees: number) {\r\n  return (degrees * Math.PI) / 180;\r\n}\r\n","export default \"#version 300 es\\n#define GLSLIFY 1\\n\\n// an attribute is an input (in) to a vertex shader.\\n// It will receive data from a buffer\\nin vec4 a_position;\\nin vec3 a_normal;\\n\\nuniform mat4 u_worldViewProjection;\\nuniform mat4 u_worldInverseTranspose;\\n\\n// varying to pass the normal to the fragment shader\\nout vec3 v_normal;\\n\\n// all shaders have a main function\\nvoid main() {\\n  // Multiply the position by the matrix.\\n  gl_Position = u_worldViewProjection * a_position;\\n\\n  // orient the normals and pass to the fragment shader\\n  v_normal = mat3(u_worldInverseTranspose) * a_normal;\\n}\"","export default \"#version 300 es\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\n// Passed in and varied from the vertex shader.\\nin vec3 v_normal;\\n\\nuniform vec3 u_reverseLightDirection;\\nuniform vec4 u_color;\\n\\n// we need to declare an output for the fragment shader\\nout vec4 outColor;\\n\\nvoid main() {\\n  // because v_normal is a varying it's interpolated\\n  // so it will not be a uint vector. Normalizing it\\n  // will make it a unit vector again\\n  vec3 normal = normalize(v_normal);\\n\\n  // compute the light by taking the dot product\\n  // of the normal to the light's reverse direction\\n  float light = dot(normal, u_reverseLightDirection);\\n\\n  outColor = u_color;\\n\\n  // Lets multiply just the color portion (not the alpha)\\n  // by the light\\n  outColor.rgb *= light;\\n}\"","export default \"#version 300 es\\n#define GLSLIFY 1\\nin vec4 a_position;\\nout vec4 v_position;\\nvoid main() {\\n  v_position = a_position;\\n  gl_Position = a_position;\\n  gl_Position.z = 1.0;\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n \\nuniform samplerCube u_skybox;\\nuniform mat4 u_viewDirectionProjectionInverse;\\n \\nin vec4 v_position;\\n \\n// we need to declare an output for the fragment shader\\nout vec4 outColor;\\n \\nvoid main() {\\n  vec4 t = u_viewDirectionProjectionInverse * v_position;\\n  outColor = texture(u_skybox, normalize(t.xyz / t.w));\\n}\"","import {Services} from '../../runtime/Services';\r\nimport {Transform} from '../components/Transform';\r\nimport {Rect2d} from '../components/Rect2d';\r\nimport {Game} from '../resources/Game';\r\nimport {Accessor} from '../../framework/Accessor';\r\nimport {Mat4, Vec3, Vec4, degToRad} from '../../core/maths';\r\n\r\nimport objVert from './Renderer/shaders/obj.vert';\r\nimport objFrag from './Renderer/shaders/obj.frag';\r\nimport skyboxVert from './Renderer/shaders/skybox.vert';\r\nimport skyboxFrag from './Renderer/shaders/skybox.frag';\r\n\r\nconst BENCHMARK_RENDER = 'render';\r\n\r\nexport class Renderer {\r\n  public static resources = [Game];\r\n  public static components = [Transform, Rect2d];\r\n  public objProgram!: WebGLProgram;\r\n  public objVao!: any;\r\n  public uWorldViewProjectionLocation!: WebGLUniformLocation;\r\n  public uWorldInverseTransposeLocation!: WebGLUniformLocation;\r\n  public uColorLocation!: WebGLUniformLocation;\r\n  public uReverseLightDirectionLocation!: WebGLUniformLocation;\r\n  public skyboxProgram!: WebGLProgram;\r\n  public skyboxVao!: any;\r\n  public uSkyboxLocation!: WebGLUniformLocation;\r\n  public uSkyboxViewDirectionProjectionInverseLocation!: WebGLUniformLocation;\r\n}\r\n\r\nexport namespace Renderer {\r\n  export function setup(renderer: Renderer) {\r\n    const gl = Services.graphics.getContext() as WebGL2RenderingContext;\r\n    setupSkybox(renderer, gl);\r\n    setupObj(renderer, gl);\r\n  }\r\n\r\n  function setupSkybox(renderer: Renderer, gl: WebGL2RenderingContext) {\r\n    const program = Services.graphics.createProgram(\r\n      skyboxVert,\r\n      skyboxFrag,\r\n    ) as WebGLProgram;\r\n    renderer.skyboxProgram = program;\r\n    // look up where the vertex data needs to go.\r\n    const positionLocation = gl.getAttribLocation(program, 'a_position');\r\n\r\n    // lookup uniforms\r\n    renderer.uSkyboxLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_skybox',\r\n    ) as WebGLUniformLocation;\r\n    renderer.uSkyboxViewDirectionProjectionInverseLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_viewDirectionProjectionInverse',\r\n    ) as WebGLUniformLocation;\r\n\r\n    // Create a vertex array object (attribute state)\r\n    const vao = gl.createVertexArray();\r\n    renderer.skyboxVao = vao;\r\n\r\n    // and make it the one we're currently working with\r\n    gl.bindVertexArray(vao);\r\n\r\n    // Create a buffer for positions\r\n    const positionBuffer = gl.createBuffer();\r\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    // Put the positions in the buffer\r\n    const positions = getSkyboxGeometry();\r\n    gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n\r\n    // Turn on the position attribute\r\n    gl.enableVertexAttribArray(positionLocation);\r\n\r\n    // Bind the position buffer.\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n    // Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    // Create a texture.\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n\r\n    const faceInfos = [\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n        url: require('../../assets/skyboxes/cloud/pos-x.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n        url: require('../../assets/skyboxes/cloud/neg-x.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n        url: require('../../assets/skyboxes/cloud/pos-y.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n        url: require('../../assets/skyboxes/cloud/neg-y.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n        url: require('../../assets/skyboxes/cloud/pos-z.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n        url: require('../../assets/skyboxes/cloud/neg-z.jpg'),\r\n      },\r\n    ];\r\n    faceInfos.forEach(faceInfo => {\r\n      const {target, url} = faceInfo;\r\n\r\n      // Upload the canvas to the cubemap face.\r\n      const level = 0;\r\n      const internalFormat = gl.RGBA;\r\n      const width = 1024;\r\n      const height = 1024;\r\n      const format = gl.RGBA;\r\n      const type = gl.UNSIGNED_BYTE;\r\n\r\n      // setup each face so it's immediately renderable\r\n      gl.texImage2D(\r\n        target,\r\n        level,\r\n        internalFormat,\r\n        width,\r\n        height,\r\n        0,\r\n        format,\r\n        type,\r\n        null,\r\n      );\r\n\r\n      // Asynchronously load an image\r\n      const image = new Image();\r\n      image.src = url;\r\n      image.addEventListener('load', function() {\r\n        // Now that the image has loaded make copy it to the texture.\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        gl.texImage2D(target, level, internalFormat, format, type, image);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n      });\r\n    });\r\n    gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n    gl.texParameteri(\r\n      gl.TEXTURE_CUBE_MAP,\r\n      gl.TEXTURE_MIN_FILTER,\r\n      gl.LINEAR_MIPMAP_LINEAR,\r\n    );\r\n  }\r\n\r\n  function setupObj(renderer: Renderer, gl: WebGL2RenderingContext) {\r\n    const program = Services.graphics.createProgram(\r\n      objVert,\r\n      objFrag,\r\n    ) as WebGLProgram;\r\n    renderer.objProgram = program;\r\n\r\n    // look up where the vertex data needs to go.\r\n    const positionAttributeLocation = gl.getAttribLocation(\r\n      program,\r\n      'a_position',\r\n    );\r\n    const normalAttributeLocation = gl.getAttribLocation(program, 'a_normal');\r\n\r\n    // look up uniform locations\r\n    renderer.uWorldViewProjectionLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_worldViewProjection',\r\n    ) as WebGLUniformLocation;\r\n    renderer.uWorldInverseTransposeLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_worldInverseTranspose',\r\n    ) as WebGLUniformLocation;\r\n    renderer.uColorLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_color',\r\n    ) as WebGLUniformLocation;\r\n    renderer.uReverseLightDirectionLocation = gl.getUniformLocation(\r\n      program,\r\n      'u_reverseLightDirection',\r\n    ) as WebGLUniformLocation;\r\n\r\n    // Create a buffer\r\n    const positionBuffer = gl.createBuffer();\r\n\r\n    // Create a vertex array object (attribute state)\r\n    const vao = gl.createVertexArray();\r\n    renderer.objVao = vao;\r\n\r\n    // and make it the one we're currently working with\r\n    gl.bindVertexArray(vao);\r\n\r\n    // Turn on the attribute\r\n    gl.enableVertexAttribArray(positionAttributeLocation);\r\n\r\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    // Set Geometry.\r\n    const positions = getFGeometry();\r\n    gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n\r\n    // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n    gl.vertexAttribPointer(\r\n      positionAttributeLocation,\r\n      3, // 3 components per iteration\r\n      gl.FLOAT, // the data is 32bit floats\r\n      false, // don't normalize the data\r\n      0, // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n      0, // start at the beginning of the buffer\r\n    );\r\n\r\n    // create the normalr buffer, make it the current ARRAY_BUFFER\r\n    // and copy in the normal values\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    const normals = getFNormals();\r\n    gl.bufferData(gl.ARRAY_BUFFER, normals, gl.STATIC_DRAW);\r\n\r\n    // Turn on the attribute\r\n    gl.enableVertexAttribArray(normalAttributeLocation);\r\n\r\n    // Tell the attribute how to get data out of colorBuffer (ARRAY_BUFFER)\r\n    gl.vertexAttribPointer(\r\n      normalAttributeLocation,\r\n      3, // 3 components per iteration\r\n      gl.FLOAT, // the data is 32bit floats\r\n      false, // don't normalize the data\r\n      0, // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n      0, // start at the beginning of the buffer\r\n    );\r\n  }\r\n\r\n  export function process(renderer: Renderer, accessor: Accessor) {\r\n    Services.benchmark.start(BENCHMARK_RENDER);\r\n    const game: Game = accessor.get<Immutable<Game>>(Game);\r\n    const entities = accessor.join<[Immutable<Transform>]>(Transform);\r\n\r\n    const gl = Services.graphics.getContext() as WebGL2RenderingContext;\r\n    const objProgram = renderer.objProgram;\r\n    const vao = renderer.objVao;\r\n    resizeCanvasToDisplaySize(gl.canvas);\r\n\r\n    // Tell WebGL how to convert from clip space to pixels\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n    // Clear the canvas\r\n    // gl.clearColor(0, 0, 0, 0);\r\n    // // tslint:disable-next-line no-bitwise\r\n    // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    // Compute the matrix\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 1;\r\n    const zFar = 2000;\r\n    const fieldOfViewRadians = degToRad(60);\r\n    const projectionMatrix = Mat4.perspective(\r\n      fieldOfViewRadians,\r\n      aspect,\r\n      zNear,\r\n      zFar,\r\n    );\r\n\r\n    // Compute the camera's matrix\r\n    const camera = Vec3.create(100, 150, 200);\r\n    const target = entities[0][0].position;\r\n    const up = Vec3.create(0, 1, 0);\r\n    const cameraMatrix = Mat4.lookAt(camera, target, up);\r\n\r\n    // Make a view matrix from the camera matrix.\r\n    const viewMatrix = cameraMatrix.inverse();\r\n\r\n    // We only care about direciton so remove the translation\r\n    const viewMatrixForSkybox = viewMatrix.copy();\r\n    viewMatrixForSkybox.wx = 0;\r\n    viewMatrixForSkybox.wy = 0;\r\n    viewMatrixForSkybox.wz = 0;\r\n\r\n    // create a viewProjection matrix. This will both apply perspective\r\n    // AND move the world so that the camera is effectively the origin\r\n    const viewProjectionMatrix = projectionMatrix.multiply(viewMatrix);\r\n\r\n    const skyboxViewDirectionProjectionInverseMatrix = projectionMatrix\r\n      .multiply(viewMatrixForSkybox)\r\n      .inverse();\r\n\r\n    // -----\r\n    // draw skybox\r\n\r\n    // turn on depth testing\r\n    gl.disable(gl.DEPTH_TEST);\r\n\r\n    // tell webgl to cull faces\r\n    gl.disable(gl.CULL_FACE);\r\n\r\n    // Tell it to use our program (pair of shaders)\r\n    gl.useProgram(renderer.skyboxProgram);\r\n\r\n    // Bind the attribute/buffer set we want.\r\n    gl.bindVertexArray(renderer.skyboxVao);\r\n\r\n    // Set the uniforms\r\n    gl.uniformMatrix4fv(\r\n      renderer.uSkyboxViewDirectionProjectionInverseLocation,\r\n      false,\r\n      skyboxViewDirectionProjectionInverseMatrix.toTypedArray(),\r\n    );\r\n\r\n    // Tell the shader to use texture unit 0 for u_skybox\r\n    gl.uniform1i(renderer.uSkyboxLocation, 0);\r\n\r\n    // Draw the geometry.\r\n    gl.drawArrays(gl.TRIANGLES, 0, 1 * 6);\r\n\r\n    // ----\r\n    // draw objects\r\n\r\n    // turn on depth testing\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    // tell webgl to cull faces\r\n    gl.enable(gl.CULL_FACE);\r\n\r\n    // Tell it to use our program (pair of shaders)\r\n    gl.useProgram(objProgram);\r\n\r\n    // Bind the attribute/buffer set we want.\r\n    gl.bindVertexArray(vao);\r\n\r\n    for (const [transform] of entities) {\r\n      // Draw a F at the origin with rotation\r\n      let worldMatrix = Mat4.yRotation(degToRad(transform.rotation.y));\r\n      const translationMatrix = Mat4.translation(transform.position);\r\n      worldMatrix = translationMatrix.multiply(worldMatrix);\r\n      const worldViewProjectionMatrix = viewProjectionMatrix.multiply(\r\n        worldMatrix,\r\n      );\r\n      const worldInverseMatrix = worldMatrix.inverse();\r\n      const worldInverseTransposeMatrix = worldInverseMatrix.transpose();\r\n\r\n      // Set the matrices\r\n      gl.uniformMatrix4fv(\r\n        renderer.uWorldViewProjectionLocation,\r\n        false,\r\n        worldViewProjectionMatrix.toTypedArray(),\r\n      );\r\n      gl.uniformMatrix4fv(\r\n        renderer.uWorldInverseTransposeLocation,\r\n        false,\r\n        worldInverseTransposeMatrix.toTypedArray(),\r\n      );\r\n\r\n      // Set the color to use\r\n      gl.uniform4fv(renderer.uColorLocation, [0.2, 1, 0.2, 1]); // green\r\n\r\n      // set the light direction.\r\n      gl.uniform3fv(\r\n        renderer.uReverseLightDirectionLocation,\r\n        Vec3.create(0.5, 0.7, 1)\r\n          .normalize()\r\n          .toTypedArray(),\r\n      );\r\n\r\n      // Draw the geometry.\r\n      gl.drawArrays(gl.TRIANGLES, 0, 16 * 6);\r\n    }\r\n\r\n    Services.benchmark.end(BENCHMARK_RENDER);\r\n  }\r\n}\r\n\r\nfunction getFGeometry() {\r\n  // prettier-ignore\r\n  const positions = new Float32Array([\r\n    // left column front\r\n    0,   0,  0,\r\n    0, 150,  0,\r\n    30,   0,  0,\r\n    0, 150,  0,\r\n    30, 150,  0,\r\n    30,   0,  0,\r\n\r\n    // top rung front\r\n    30,   0,  0,\r\n    30,  30,  0,\r\n    100,   0,  0,\r\n    30,  30,  0,\r\n    100,  30,  0,\r\n    100,   0,  0,\r\n\r\n    // middle rung front\r\n    30,  60,  0,\r\n    30,  90,  0,\r\n    67,  60,  0,\r\n    30,  90,  0,\r\n    67,  90,  0,\r\n    67,  60,  0,\r\n\r\n    // left column back\r\n      0,   0,  30,\r\n      30,   0,  30,\r\n      0, 150,  30,\r\n      0, 150,  30,\r\n      30,   0,  30,\r\n      30, 150,  30,\r\n\r\n    // top rung back\r\n      30,   0,  30,\r\n    100,   0,  30,\r\n      30,  30,  30,\r\n      30,  30,  30,\r\n    100,   0,  30,\r\n    100,  30,  30,\r\n\r\n    // middle rung back\r\n      30,  60,  30,\r\n      67,  60,  30,\r\n      30,  90,  30,\r\n      30,  90,  30,\r\n      67,  60,  30,\r\n      67,  90,  30,\r\n\r\n    // top\r\n      0,   0,   0,\r\n    100,   0,   0,\r\n    100,   0,  30,\r\n      0,   0,   0,\r\n    100,   0,  30,\r\n      0,   0,  30,\r\n\r\n    // top rung right\r\n    100,   0,   0,\r\n    100,  30,   0,\r\n    100,  30,  30,\r\n    100,   0,   0,\r\n    100,  30,  30,\r\n    100,   0,  30,\r\n\r\n    // under top rung\r\n    30,   30,   0,\r\n    30,   30,  30,\r\n    100,  30,  30,\r\n    30,   30,   0,\r\n    100,  30,  30,\r\n    100,  30,   0,\r\n\r\n    // between top rung and middle\r\n    30,   30,   0,\r\n    30,   60,  30,\r\n    30,   30,  30,\r\n    30,   30,   0,\r\n    30,   60,   0,\r\n    30,   60,  30,\r\n\r\n    // top of middle rung\r\n    30,   60,   0,\r\n    67,   60,  30,\r\n    30,   60,  30,\r\n    30,   60,   0,\r\n    67,   60,   0,\r\n    67,   60,  30,\r\n\r\n    // right of middle rung\r\n    67,   60,   0,\r\n    67,   90,  30,\r\n    67,   60,  30,\r\n    67,   60,   0,\r\n    67,   90,   0,\r\n    67,   90,  30,\r\n\r\n    // bottom of middle rung.\r\n    30,   90,   0,\r\n    30,   90,  30,\r\n    67,   90,  30,\r\n    30,   90,   0,\r\n    67,   90,  30,\r\n    67,   90,   0,\r\n\r\n    // right of bottom\r\n    30,   90,   0,\r\n    30,  150,  30,\r\n    30,   90,  30,\r\n    30,   90,   0,\r\n    30,  150,   0,\r\n    30,  150,  30,\r\n\r\n    // bottom\r\n    0,   150,   0,\r\n    0,   150,  30,\r\n    30,  150,  30,\r\n    0,   150,   0,\r\n    30,  150,  30,\r\n    30,  150,   0,\r\n\r\n    // left side\r\n    0,   0,   0,\r\n    0,   0,  30,\r\n    0, 150,  30,\r\n    0,   0,   0,\r\n    0, 150,  30,\r\n    0, 150,   0,\r\n  ]);\r\n\r\n  // Center the F around the origin and Flip it around. We do this because\r\n  // we're in 3D now with and +Y is up where as before when we started with 2D\r\n  // we had +Y as down.\r\n\r\n  // We could do by changing all the values above but I'm lazy.\r\n  // We could also do it with a matrix at draw time but you should\r\n  // never do stuff at draw time if you can do it at init time.\r\n  let matrix = Mat4.xRotation(Math.PI);\r\n  matrix = matrix.translate(Vec3.create(-50, -75, -15));\r\n\r\n  for (let ii = 0; ii < positions.length; ii += 3) {\r\n    const vector = matrix.transformVector(\r\n      Vec4.create(positions[ii + 0], positions[ii + 1], positions[ii + 2], 1),\r\n    );\r\n    positions[ii + 0] = vector.x;\r\n    positions[ii + 1] = vector.y;\r\n    positions[ii + 2] = vector.z;\r\n  }\r\n\r\n  return positions;\r\n}\r\n\r\nfunction getFNormals() {\r\n  // prettier-ignore\r\n  return new Float32Array([\r\n    // left column front\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n\r\n    // top rung front\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n\r\n    // middle rung front\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n    0, 0, 1,\r\n\r\n    // left column back\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n\r\n    // top rung back\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n\r\n    // middle rung back\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n    0, 0, -1,\r\n\r\n    // top\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n\r\n    // top rung right\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n\r\n    // under top rung\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n\r\n    // between top rung and middle\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n\r\n    // top of middle rung\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n    0, 1, 0,\r\n\r\n    // right of middle rung\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n\r\n    // bottom of middle rung.\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n\r\n    // right of bottom\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n    1, 0, 0,\r\n\r\n    // bottom\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n    0, -1, 0,\r\n\r\n    // left side\r\n    -1, 0, 0,\r\n    -1, 0, 0,\r\n    -1, 0, 0,\r\n    -1, 0, 0,\r\n    -1, 0, 0,\r\n    -1, 0, 0,\r\n  ]);\r\n}\r\n\r\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\r\n  const width = canvas.clientWidth | 0; // tslint:disable-line no-bitwise\r\n  const height = canvas.clientHeight | 0; // tslint:disable-line no-bitwise\r\n  if (canvas.width !== width || canvas.height !== height) {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// Fill the buffer with the values that define a quad.\r\nfunction getSkyboxGeometry() {\r\n  // prettier-ignore\r\n  return new Float32Array(\r\n    [\r\n      -1, -1,\r\n       1, -1,\r\n      -1,  1,\r\n      -1,  1,\r\n       1, -1,\r\n       1,  1,\r\n  ]);\r\n}\r\n","import {Vec2} from '../../core/maths/Vec2';\r\nimport {Vec3} from '../../core/maths/Vec3';\r\n\r\n/** Component representing a rectangle drawn on a 2d canvas */\r\nexport class Rect2d {\r\n  /** 2d dimensions w,h */\r\n  public dimensions: Vec2 = new Vec2();\r\n  /** fill color r,g,b */\r\n  public fillColor: Vec3 = new Vec3();\r\n}\r\n","import {Game} from '../resources/Game';\r\nimport {Transform} from '../components/Transform';\r\nimport {Velocity} from '../components/Velocity';\r\nimport {Vec3} from '../../core/maths/Vec3';\r\nimport {Accessor} from '../../framework/Accessor';\r\n\r\nexport class PhysicsManager {\r\n  public static resources = [Game];\r\n  public static components = [Transform, Velocity];\r\n  public tmpVelocity: Vec3 = new Vec3();\r\n}\r\n\r\nexport namespace PhysicsManager {\r\n  export function process(sys: PhysicsManager, accessor: Accessor) {\r\n    const game = accessor.get<Immutable<Game>>(Game);\r\n    const entities = accessor.join<[Transform, Immutable<Velocity>]>(\r\n      Transform,\r\n      Velocity,\r\n    );\r\n\r\n    for (const [transform, velocity] of entities) {\r\n      transform.position.add(\r\n        velocity.velocity.scale(game.deltaTime * 100, sys.tmpVelocity),\r\n        transform.position,\r\n      );\r\n    }\r\n  }\r\n}\r\n","// import framework\r\nimport {Application} from './framework/Application';\r\nimport {World} from './framework/World';\r\n\r\n// import runtime\r\nimport {Services} from './runtime/Services';\r\n\r\n// import services\r\nimport * as InputService from './library/services/InputService';\r\nimport * as BenchmarkService from './library/services/BenchmarkService';\r\nimport * as LoggerService from './library/services/LoggerService';\r\nimport * as PlatformService from './library/services/PlatformService';\r\nimport * as GraphicsService from './library/services/GraphicsService';\r\n\r\n// import systems\r\nimport {GameManager} from './library/systems/GameManager';\r\nimport {DebugManager} from './library/systems/DebugManager';\r\nimport {GamepadInputter} from './library/systems/GamepadInputter';\r\nimport {KeyboardInputter} from './library/systems/KeyboardInputter';\r\nimport {MouseInputter} from './library/systems/MouseInputter';\r\nimport {Tester} from './library/systems/Tester';\r\nimport {Renderer} from './library/systems/Renderer';\r\nimport {PhysicsManager} from './library/systems/PhysicsManager';\r\n\r\n// import resources\r\nimport {Game} from './library/resources/Game';\r\nimport {DebugFrames} from './library/resources/DebugFrames';\r\nimport {Keyboard} from './library/resources/Keyboard';\r\nimport {Mouse} from './library/resources/Mouse';\r\nimport {Gamepads} from './library/resources/Gamepads';\r\n\r\n// import components\r\nimport {Transform} from './library/components/Transform';\r\nimport {Velocity} from './library/components/Velocity';\r\nimport {Player} from './library/components/Player';\r\n\r\n// configure services\r\nServices.input = new InputService.Browser();\r\n// Services.benchmark = new BenchmarkService.Browser();\r\nServices.log = new LoggerService.Browser();\r\nServices.platform = new PlatformService.Browser();\r\nServices.graphics = new GraphicsService.Browser();\r\nconst canvas = document.querySelector('#app') as HTMLCanvasElement;\r\nconst gl = canvas.getContext('webgl2') as WebGL2RenderingContext;\r\nServices.graphics.bindContext(gl);\r\n\r\n// setup application with resources, systems and entities\r\nconst app = new Application();\r\nWorld.addResource(app.world, Game);\r\nWorld.addResource(app.world, DebugFrames);\r\nWorld.addResource(app.world, Keyboard);\r\nWorld.addResource(app.world, Mouse);\r\nWorld.addResource(app.world, Gamepads);\r\nWorld.addSystem(app.world, GameManager);\r\nWorld.addSystem(app.world, MouseInputter);\r\nWorld.addSystem(app.world, KeyboardInputter);\r\nWorld.addSystem(app.world, GamepadInputter);\r\nWorld.addSystem(app.world, Tester);\r\nWorld.addSystem(app.world, PhysicsManager);\r\nWorld.addSystem(app.world, Renderer);\r\n// World.addSystem(app.world, DebugManager);\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  const transform = new Transform();\r\n  transform.position.x = i * 100;\r\n  transform.position.y = 0;\r\n  transform.position.z = -300 - i * 100;\r\n  const components =\r\n    i === 0\r\n      ? [transform, new Velocity(), new Player()]\r\n      : [transform, new Velocity()];\r\n  World.createEntity(app.world, components);\r\n}\r\n\r\nWorld.setup(app.world);\r\n\r\n// start application\r\nApplication.tick(app);\r\n","import {\r\n  IInputService,\r\n  IKeyEventHandler,\r\n  IMouseEventHandler,\r\n  IGamepad\r\n} from './IInputService';\r\n\r\ntype IRawEventHandler = (event: Event) => void;\r\n\r\n/** An input system which works within the browser environment */\r\nexport class InputService implements IInputService {\r\n  private flagIsContextMenuEnabled = true;\r\n  private listeners: {\r\n    [id: number]: {type: string; listener: IRawEventHandler};\r\n  } = {};\r\n  private lastListenerId: number = -1;\r\n\r\n  public isPointerLocked() {\r\n    return !document.pointerLockElement;\r\n  }\r\n\r\n  public lockPointer() {\r\n    document.body.requestPointerLock();\r\n  }\r\n\r\n  public unlockPointer() {\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  public isContextMenuEnabled() {\r\n    return this.flagIsContextMenuEnabled;\r\n  }\r\n\r\n  public disableContextMenu() {\r\n    this.flagIsContextMenuEnabled = false;\r\n    window.addEventListener('contextmenu', this.preventDefaultHandler);\r\n  }\r\n\r\n  public enableContextMenu() {\r\n    this.flagIsContextMenuEnabled = true;\r\n    window.removeEventListener('contextmenu', this.preventDefaultHandler);\r\n  }\r\n\r\n  public onKeyDown(handler: IKeyEventHandler) {\r\n    return this.createEventBinding('keydown', this.mapKeyEventHandler(handler));\r\n  }\r\n\r\n  public onKeyUp(handler: IKeyEventHandler) {\r\n    return this.createEventBinding('keyup', this.mapKeyEventHandler(handler));\r\n  }\r\n\r\n  public onMouseDown(handler: IMouseEventHandler) {\r\n    return this.createEventBinding(\r\n      'mousedown',\r\n      this.mapMouseEventHandler(handler)\r\n    );\r\n  }\r\n\r\n  public onMouseUp(handler: IMouseEventHandler) {\r\n    return this.createEventBinding(\r\n      'mouseup',\r\n      this.mapMouseEventHandler(handler)\r\n    );\r\n  }\r\n\r\n  public onMouseWheel(handler: IMouseEventHandler) {\r\n    return this.createEventBinding(\r\n      'mousescroll',\r\n      this.mapMouseEventHandler(handler)\r\n    );\r\n  }\r\n\r\n  public onMouseMove(handler: IMouseEventHandler) {\r\n    return this.createEventBinding(\r\n      'mousemove',\r\n      this.mapMouseEventHandler(handler)\r\n    );\r\n  }\r\n\r\n  public removeEventBinding(id: number) {\r\n    window.removeEventListener(\r\n      this.listeners[id].type,\r\n      this.listeners[id].listener\r\n    );\r\n    delete this.listeners[id];\r\n    return true;\r\n  }\r\n\r\n  public getGamepads() {\r\n    return (navigator.getGamepads() as unknown) as IGamepad[];\r\n  }\r\n\r\n  private createEventBinding(\r\n    type: string,\r\n    listener: any /* RawEventListener */\r\n  ) {\r\n    const id = ++this.lastListenerId;\r\n    this.listeners[id] = {type, listener};\r\n    window.addEventListener(type, listener);\r\n    return id;\r\n  }\r\n\r\n  private preventDefaultHandler(event: Event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  private mapMouseEventHandler(handler: IMouseEventHandler) {\r\n    return (event: MouseEvent) => {\r\n      handler({\r\n        button: event.button,\r\n        wheelDelta:\r\n          event instanceof WheelEvent\r\n            ? event.deltaY / Math.abs(event.deltaY)\r\n            : 0,\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n        xDelta: event.movementX,\r\n        yDelta: event.movementY\r\n      });\r\n    };\r\n  }\r\n\r\n  private mapKeyEventHandler(handler: IKeyEventHandler) {\r\n    return (event: KeyboardEvent) => {\r\n      handler({\r\n        key: event.key,\r\n        code: event.code\r\n      });\r\n    };\r\n  }\r\n}\r\n","import ILoggerService from './ILoggerService';\r\n\r\nexport class LoggerService implements ILoggerService {\r\n  public info(msg: string) {\r\n    // tslint:disable-next-line no-console\r\n    console.log(msg);\r\n  }\r\n  public warn(msg: string) {\r\n    // tslint:disable-next-line no-console\r\n    console.warn(msg);\r\n  }\r\n  public error(msg: string) {\r\n    // tslint:disable-next-line no-console\r\n    console.error(msg);\r\n  }\r\n  public trace() {\r\n    // tslint:disable-next-line no-console\r\n    console.trace();\r\n  }\r\n}\r\n","import {IPlatformService} from './IPlatformService';\r\n\r\nexport class PlatformService implements IPlatformService {\r\n  public cancelAnimationFrame(id: number) {\r\n    return cancelAnimationFrame(id);\r\n  }\r\n\r\n  public requestAnimationFrame(frameRequestCallback: (time: number) => void) {\r\n    return requestAnimationFrame(frameRequestCallback);\r\n  }\r\n\r\n  public now() {\r\n    return performance.now();\r\n  }\r\n}\r\n","import {IGraphicsService} from './IGraphicsService';\r\n\r\nexport class GraphicsService implements IGraphicsService {\r\n  private gl!: WebGL2RenderingContext;\r\n\r\n  public bindContext(gl: WebGL2RenderingContext) {\r\n    this.gl = gl;\r\n  }\r\n\r\n  public getContext() {\r\n    return this.gl;\r\n  }\r\n\r\n  public createProgram(vert: string, frag: string) {\r\n    const prog = this.gl.createProgram() as WebGLProgram;\r\n    const vertShader = this.createShader(this.gl.VERTEX_SHADER, vert);\r\n    const fragShader = this.createShader(this.gl.FRAGMENT_SHADER, frag);\r\n    this.gl.attachShader(prog, vertShader);\r\n    this.gl.attachShader(prog, fragShader);\r\n    this.gl.linkProgram(prog);\r\n    const success = this.gl.getProgramParameter(prog, this.gl.LINK_STATUS);\r\n    if (success) {\r\n      return prog;\r\n    }\r\n\r\n    const log = this.gl.getProgramInfoLog(prog);\r\n    this.gl.deleteProgram(prog);\r\n    throw new Error(log || undefined);\r\n  }\r\n\r\n  private createShader(shaderType: number, source: string) {\r\n    const shader = this.gl.createShader(shaderType) as WebGLShader;\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n    const success = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\r\n    if (success) {\r\n      return shader;\r\n    }\r\n\r\n    const log = this.gl.getShaderInfoLog(shader);\r\n    this.gl.deleteShader(shader);\r\n    throw new Error(log || undefined);\r\n  }\r\n}\r\n","export class DebugFrames {\r\n  public frameTimings: [string, number][][] = [];\r\n  public flushedNum: number = 0;\r\n}\r\n"],"sourceRoot":""}